#!/usr/bin/env ruby

Process.setproctitle('chook')

### Copyright 2017 Pixar

###
###    Licensed under the Apache License, Version 2.0 (the "Apache License")
###    with the following modification; you may not use this file except in
###    compliance with the Apache License and the following modification to it:
###    Section 6. Trademarks. is deleted and replaced with:
###
###    6. Trademarks. This License does not grant permission to use the trade
###       names, trademarks, service marks, or product names of the Licensor
###       and its affiliates, except as required to comply with Section 4(c) of
###       the License and to reproduce the content of the NOTICE file.
###
###    You may obtain a copy of the Apache License at
###
###        http://www.apache.org/licenses/LICENSE-2.0
###
###    Unless required by applicable law or agreed to in writing, software
###    distributed under the Apache License with the above modification is
###    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
###    KIND, either express or implied. See the Apache License for the specific
###    language governing permissions and limitations under the Apache License.
###
###

require 'getoptlong'

# The CLI options for GetoptLong
OPTS = GetoptLong.new(
  ['--log', '-l',  GetoptLong::REQUIRED_ARGUMENT],
  ['--dev', '-d',  GetoptLong::NO_ARGUMENT]
)

env = :production
log_level = nil

OPTS.each do |opt, arg|
  case opt
  when '--log'
    log_level = arg
  when '--dev'
    env = :development
  end # case
end # opts.each

ENV['APP_ENV'] = env.to_s

require 'chook/server'
begin
  Chook::Server.run! log_level: log_level
rescue => e
  Chook.logger.fatal e.to_s
  e.backtrace.each { |line| Chook.logger.fatal "..#{line}" }
end
