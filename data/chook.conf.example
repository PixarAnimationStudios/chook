#################
# This sample config file uses default settings.
#
# Each setting is defined on one line like so:
#
#     key: value
#
# Values may have spaces.
#
# Blank lines and those starting with # are ignored.

#################
# The port used by the server.
# Default: 443 when use_ssl is true, 80 otherwise
#
port: 80

#################
# By default incoming webhooks are handled in parallel
# If you have problems (e.g. a handler isn't thread-safe) try setting this
# to false and hooks will be handled one at a time, in the order received.
# Default: true
#
concurrency: true

#################
# The directory holding the internal and external handlers.
# Their filenames must start with a known webhook name, and
# their executability determines internal (not executable)
# versus external (executable). See README.md for details.
# Default: /Library/Application Support/Chook
#
handler_dir: /Library/Application Support/Chook

#################
# Should the server use SSL (https)? Ignored unless the engine is 'thin'
# Default: false
#
use_ssl: false

#################
# When using SSL, the path to the SSL certificate to use, in PEM format
# Required if use_ssl == true and engine == thin
# Default: none
#
ssl_cert_path:

#################
# When using SSL, the path to the private key for the SSL certificate, in PEM format
# Required if use_ssl == true and engine == thin
# Default: none
#
ssl_private_key_path:

#################
# The path to the file used for chook server logging
# Default: /var/log/chook-server.log
#
log_file: /var/log/chook-server.log

#################
# The detail level for the log. One of:
# fatal (only fatal errors logged), error, warn, info, or debug (everything logged)
# Default: info
#
log_level: info

#################
# How many old log files to keep when rotating?
# Set to 0, or don't set at all, to disable auto-rotating
# of log files.
# Default: 10
#
logs_to_keep: 10

#################
# The log file rotates automatically when it reaches this size in megabytes.
# Default: 10
#
log_max_megs: 10

#################
# Any value here will turn on 'HTTP Basic Authentication' for webhooks,
# and this will be the username required for a Jamf Pro server to send
# webhooks to the Chook server.
#
# Leaving this empty will allow receiving of webooks with no authentication
#
# Default: none
#
webhooks_user:

#################
# When 'HTTP Basic Authentication' is enabled by setting webhooks_user, this
# tells chook how to learn the password for that user:
#
# - If its a path to a file, the file contains the password and nothing else.
#   The file must be owned by the user running the chook server, and must have
#   mode 0600.
#
# - If it ends with a pipe character (|), everything execpt the pipe is considered
#   to be a shell command, executable by the user running the chook server.
#   The standard-output of the command will be the password.
#
# Default: none
#
webhooks_user_pw:

#################
# Any value here will require authentication to view the admin web page.
#
# Leaving this empty will allow anyone to see the admin web page.
#
# If the value here is 'use_jamf' then anyone can log in with their
# Jamf Pro credentials, and the admin_pw setting is ignored
# (see the jamf_* settings below)
#
# If the value is anything else, it is the username required to
# log in to the admin web page.
#
# Default: none
#
admin_user:

#################
# When admin page authentication is enabled by setting admin_user, this
# tells chook how to learn the password for that user:
#
# - if the admin_user is 'use_jamf' then this is ignored, see the jamf_* settings below
#
# - If its a path to a file, the file contains the password and nothing else.
#   The file must be owned by the user running the chook server, and must have
#   mode 0600.
#
# - If it ends with a pipe character (|), everything execpt the pipe is considered
#   to be a shell command, executable by the user running the chook server.
#   The standard-output of the command will be the password.
#
# Default: none
#
admin_pw:

#################
# When admin page authentication is enabled by setting admin_user,
# this is how many seconds before the browser session expires and the
# admin must log in again.
#
# Default: 86400 (24 hours)
#
admin_session_expires: 86400

#################
# When the admin_user is 'use_jamf', this is the hostname of the
# Jamf Pro server to use for authentication
#
# Default: none, but /etc/ruby-jss.conf will be honored
#
jamf_server:

#################
# When the admin_user is 'use_jamf', this is the port of the
# Jamf Pro server to use for Authentication
#
# Default: none, but /etc/ruby-jss.conf will be honored
#
jamf_port:

#################
# When the admin_user is 'use_jamf', should SSL be used when
# connection to the jamf_server? true or false
#
# Default: none, but /etc/ruby-jss.conf will be honored
#
jamf_use_ssl:

#################
# When the admin_user is 'use_jamf', and jamf_use_ssl is true,
# should SSL certificates from the jamf server be
# validated?
#
# Default: none, but /etc/ruby-jss.conf will be honored
#
jamf_verify_cert:

#################
# Environment Variables to set before starting the server.
# The value is a comma-separated list of  VAR=value pairs.
# NOTE: do not quote the values.
# Example:
#   env: FOO=bar,BAZ=this is a value,BANG=42
#
# Default: none
#
env:
